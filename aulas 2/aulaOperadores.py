"""
Operadores de compara√ß√£o
Os operadores de compara√ß√£o s√£o usados para comparar valores, o que vai retornar True ou False, dependendo da condi√ß√£o. A seguir, na Tabela 3 temos exemplos de alguns usados no Python.

Operador	Conceito	Exemplo
>(Maior que)	Verifica se um valor √© maior que outro	x > 5
<(Menor que)	Verifica se um valor √© menor que outro	x < 5
== (Igual a)	Verifica se um valor √© igual a outro	x == 5
!= (Diferente de)	Verifica se um valor √© diferente de outro	x != 5
>= (Maior ou igual a)	Verifica se um valor √© maior ou igual a outro	x >= 5
<= (Menor ou igual a)	Verifica se um valor √© menor ou igual a outro	x <= 5



Operadores l√≥gicos
Os operadores l√≥gicos s√£o usados para unir duas ou mais express√µes condicionais. Isso √© feito por meio de conectivos, como podemos ver na Tabela 4.

Operador	Conceito	Exemplo
and	Retorna True se todas as condi√ß√µes forem verdadeiras, caso contr√°rio retorna False	x > 1 and x < 5
or	Retorna True se uma das condi√ß√µes for verdadeiras, caso contr√°rio retorna False	x > 1 or x < 5
not	Inverte o resultado: se o resultado da express√£o for True, o operador retorna false	not(x > 1 and x < 5)

O operador l√≥gico not inverte o valor booleano de uma express√£o. Se a express√£o for True, ele a torna False, e vice-versa.

exemplos:
print(not True)  # False
print(not False) # True
print(not (5 > 3)) # False, porque 5 > 3 √© True, e `not` inverte o resultado
Por que as outras op√ß√µes est√£o erradas?
and: Operador l√≥gico que retorna True apenas se ambas as express√µes forem True.
or: Operador l√≥gico que retorna True se pelo menos uma das express√µes for True.
is not: Operador de identidade, usado para verificar se dois objetos n√£o s√£o o 
mesmo na mem√≥ria (n√£o inverte valores l√≥gicos diretamente).
üîπ Conclus√£o: O operador l√≥gico que inverte o resultado de uma express√£o √© not.









"""

idade_lucas = 21
idade_carolina = 19

# OPERADOR OR
if idade_lucas >= 18 or idade_carolina >= 18: 
    print("Pelo menos um dos dois √© maior de idade")
else:
    print("Lucas e Carolina n√£o s√£o maiores de idade")

# OPERADOR AND
if idade_lucas >= 18 and idade_carolina >= 18:
    print("Lucas e Carolina s√£o maiores de idade")
else:
    print("Pelo menos um dos dois n√£o √© maior de idade")


"""
Operadores de identidade
Os operadores de identidade servem para a compara√ß√£o de objetos. Nessa compara√ß√£o √© verificado se eles ocupam a mesma posi√ß√£o na mem√≥ria, o que significar√° que se trata do mesmo objeto, como vemos isso na Tabela 5.

Operador	Conceito	Exemplo
is:	Retorna True se as vari√°veis comparadas forem o mesmo objeto	nome is ‚ÄòMarcos‚Äô
is not:	Retorna True se as vari√°veis comparadas n√£o forem o mesmo objeto	x is not ‚ÄòPython‚Äô
. Operadores de identidade
Vejamos com mais detalhes o uso dos operadores de identidade:


"""

ime_carlos = 'Botafogo'
time_luciano = 'Flamengo'
time_fabricia = 'Botafogo'

if time_carlos is time_luciano: # se(if) o time_carlos for igual time_luciano
    print("time_carlos - time_luciano = mesmo objeto") #mostre na tela: Mesmo Objeto.
else:
    print("time_carlos - time_luciano = objetos diferentes") #se n√£o, mostre: Objetos diferentes.

if time_carlos is time_fabricia:
    print("time_carlos - time_fabricia = mesmo objeto")
else:
    print("time_carlos - time_fabricia = objetos diferentes")
